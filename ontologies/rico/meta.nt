<https://prefix.zazuko.com/rico:> <http://dbpedia.org/ontology/filename> "@vocabulary/rico/rico.nq" .
<https://prefix.zazuko.com/rico:> <http://purl.org/dc/terms/description> "<html:div xml:lang=\"en\" id=\"introduction\">\n                <html:h3>Introduction</html:h3>\n                <html:p>RiC-O (Records in Contexts-Ontology) is an OWL ontology for describing\n                    archival record resources. As the second part of Records in Contexts standard,\n                    it is a formal representation of Records in Contexts Conceptual Model (RiC-CM).\n                    This version, which is v0.2, is the current official release. It is compliant\n                    with RiC-CM v0.2, that will be published soon after the release of RiC-O\n                    v0.2.</html:p>\n                <html:p>The following diagram shows the main RiC-CM v0.2 entities and a few\n                    relations between them: <html:img src=\"https://raw.githubusercontent.com/ICA-EGAD/RiC-O/master/diagrams/diagrams_v0-2/RiC-CM-overview/diagram_RiC-CM-overview-RiC-v0-2.jpg\" alt=\"A partial overview of RiC-CM v0.2 main entities\" class=\"diagram\"></html:img>\n                </html:p>\n                <html:div id=\"design-principles\">\n                    <html:h4>RiC-O design principles</html:h4>\n                    <html:p>The following design principles were followed when developing\n                        RiC-O.</html:p>\n                    <html:p>\n                        <html:strong>RiC-O is a domain or reference ontology</html:strong>.</html:p>\n                    <html:p>It provides a generic vocabulary and formal rules for creating RDF\n                        datasets (or generating them from existing archival metadata) that describe\n                        in a consistent way any kind of archival record resource. It can support\n                        publishing RDF datasets as Linked Data, querying them using SPARQL, and\n                        making inferences using the logic of the ontology.</html:p>\n                    <html:p>While some projects have built some specific ontologies for describing\n                        archives, at this time no generic domain ontology exists for the specific\n                        needs of the archival community. This is why EGAD decided to develop RiC-O\n                        as the second part of RiC standard.</html:p>\n                    <html:p>Apart this first, main target, RiC-O also can help archival institutions\n                        and engineers to design and develop other technical implementations of\n                        RiC-CM that represent record resources and their layers of contexts as\n                        oriented, interconnected graphs. Of course, other technical implementations\n                        may be developed later on, including XML models, or (hopefully) new versions\n                        of EAD and EAC-CPF XML models.</html:p>\n                    <html:p>As RiC-O is a generic, domain ontology, it does not address by itself\n                        every specific need or expectation that may occur in every archival\n                        institution or project. It is rather a high level framework and a project\n                        can either limit itself to the use of a selection of components, or can add\n                        more subcomponents where needed.</html:p>\n                    <html:p>As a domain ontology, RiC-O, at this stage at least, does not borrow any\n                        component from other existing ontologies (such as the cultural heritage\n                        models – IFLA-LRM and CIDOC-CRM, PREMIS, or PROV-O). It should therefore be\n                        easier, for an archival institution or archival project, to understand,\n                        implement and maintain RiC-O within its system.</html:p>\n                    <html:p>Later on, RiC-O will be aligned with these existing models. This is of\n                        course essential for interconnecting RDF datasets conforming to RiC-O with\n                        other datasets, or for using parts of RiC-O in other contexts than the\n                        archival or records management realm.</html:p>\n                    <html:p>\n                        <html:strong>RiC-O must be immediately usable.</html:strong>\n                    </html:p>\n                    <html:p>This is a key feature for a new model. In particular, it is very\n                        important that existing archival metadata, that are created or generated in\n                        current information systems, can be converted to RDF conforming to RiC-O,\n                        without losing any data, structural or partially implicit information. What\n                        is at stake here is that metadata conforming to the previous existing ICA\n                        standards can be processed successfully.</html:p>\n                    <html:p>During the ongoing development process, a lot of successful testing has\n                        been made, using XML/EAD finding aids and XML/EAC-CPF authority records,\n                        that have been converted to RDF datasets, either by hand or using scripts. A\n                        conversion software is being developed and will soon be available.</html:p>\n                    <html:p>While some existing metadata sets may have a very fine level of\n                        granularity and accuracy, already using, for example, controlled\n                        vocabularies, or describing curation events separately, often these metadata\n                        don’t have the very precise structure that RiC-CM recommends. Even then,\n                        such a conversion process should remain possible. In order to allow this,\n                        RiC-O sometimes provides several methods for representing information (as\n                        described below). From this point of view, the current official version of\n                        RiC-O may be considered a transitional ontology, in which some components\n                        may be deprecated later on.</html:p>\n                    <html:p> The usability of a model also depends on its documentation. That’s why\n                        the current official release has been fully documented (this documentation\n                        will be continously improved).</html:p>\n                    <html:p>RiC-O will also soon be acompanied with examples (RDF datasets). Some\n                        tutorials should also be written, and EGAD will organize practical\n                        workshops.</html:p>\n                    <html:p>\n                        <html:strong>RiC-O has to provide a flexible\n                        framework</html:strong>.</html:p>\n                    <html:p>This is a very important principle too. It is related with the usability\n                        principle quoted above. Moreover, archival description is flexible by\n                        essence. It is quite commonly noted that the level of granularity of\n                        information varies from one finding aid to another (or from one authority\n                        record to another), or even within the same finding aid. Some series or\n                        agents are described summarily because little is known about them and there\n                        is little time for extensive research, while other series, even records, or\n                        agents are described in detail; some relations (e.g. that relating to\n                        provenance) may be described without any detail while others may be\n                        thoroughly documented, as ISAAR(CPF) and EAC-CPF allow it.</html:p>\n                    <html:p>Being generally flexible, for an OWL ontology, depends first on the\n                        polyhierarchical systems of classes and properties it provides. A\n                        superproperty or superclass, more general or generic than its subproperties\n                        or subclasses, must exist and be available for handling information, while\n                        at the same time more accurate subcomponents must be there for handling more\n                        accurate description. Also, RiC-O should provide several methods for\n                        expressing whether relations are well attested and certain, or are more vague,\n                        as well as direct and short paths between entities alongside more complex\n                        ones.</html:p>\n                    <html:p>\n                        <html:strong>RiC-O opens new potential for archival\n                            description.</html:strong>\n                    </html:p>\n                    <html:p>This means that Linked Data tools and interfaces should enable end users\n                        to go through RDF/RiC-O graphs, to query them using SPARQL in an efficient\n                        way and to consult archival metadata and their contexts in new ways. As an example,\n                        an end user should be able to ask « What are (according to your dataset) the\n                        corporate bodies that succeeded to this given entity from its end of\n                        existence, by 1840, to nowadays (as concerns this given activity) ?» or «\n                        tell me what instantiations of this photograph exist? » « what are the\n                        existing copies of this original charter?», and get a list of these\n                        entities. In other words, institutions or projects that make the effort to\n                        implement RiC-O will get new insight into the content and context of their\n                        archives that wasn't visible with the existing ICA-standards. It should be\n                        even more interesting if you can infer new assertions from the RDF datasets\n                        you built, and of course link your datasets to other ressources outside of\n                        your institution.</html:p>\n                    <html:p>\n                        <html:strong>RiC-O should be extensible</html:strong>.</html:p>\n                    <html:p>Institutions are free to extend the ontology by adding new subclasses or\n                        subproperties if needed. RiC-O has also the potential to be useable in other\n                        contexts than purely archival ones. This implies that hierarchies of classes\n                        and properties are defined and that mappings are developed with other\n                        ontologies as mentioned above. It may also imply that RiC-O should provide\n                        “hooks” enabling connections with, for example, existing SKOS\n                        vocabularies.</html:p>\n                </html:div>\n                <html:div id=\"understanding-RiCO\">\n                    <html:h4>Understanding RiC-O: a quick overview of some features</html:h4>\n                    <html:div id=\"fromRiCCM-to-RiCO\">\n                        <html:h5>From RiC-CM to RiC-O</html:h5>\n                        <html:p>In the <html:strong>system of classes of RiC-O,</html:strong> for\n                            each RiC-CM entity, you can find a corresponding class. These classes\n                            are organized according to the same hierarchy as in RiC-CM. In some\n                            projects, you may need very few of them (e.g. Agent, Record Resource and\n                            Activity only), while in other ones, you may need more (e.g. Corporate\n                            Body and Person; Record; Place; Provenance Relation).</html:p>\n                        <html:p>Certain classes only exist in RiC-O and not in RiC-CM. These\n                            additional classes address special needs:</html:p>\n                        <html:ul>\n                            <html:li>some correspond to RiC-CM attributes, when it may be considered\n                                necessary to handle them as full entities. This is the case for\n                                    <html:a href=\"#rico:Type\">Type</html:a> and its subclasses, that\n                                correspond to RiC-CM attributes that contain controlled values, and\n                                that can help to articulate RiC-O with external RDF resources like\n                                SKOS vocabularies; and also for <html:a href=\"#rico:Language\">Language</html:a>, <html:a href=\"#rico:Name\">Name</html:a> and\n                                    <html:a href=\"#rico:Identifier\">Identifier</html:a>, that can be\n                                considered as full entities and as key linking nodes in a RDF graph.\n                                All these classes have been grouped under a <html:a href=\"#rico:Concept\">Concept</html:a> class. </html:li>\n                            <html:li>some classes have been added in order to provide a more\n                                accurate definition and model for some entities. <html:a href=\"#rico:Place\">Place</html:a> thus comes along with a\n                                    <html:a href=\"#rico:PhysicalLocation\">Physical Location\n                                    class</html:a>, and with a <html:a href=\"#rico:Coordinates\">Coordinates class</html:a>. A Place is considered both a \n                                geographical and historical entity. As a historical entity, among\n                                other features, it has a history, and may be preceded or succeeded\n                                by other Places. A Place also may have zero to many Physical\n                                Location through time (for instance, its boundaries, if it is an\n                                administrative area or a country, may change). Each Physical\n                                Location may be connected to zero to many Coordinates. This model is\n                                quite close to the Linked Places Format (<html:a href=\"https://github.com/LinkedPasts/linked-places\">https://github.com/LinkedPasts/linked-places</html:a>). Another\n                                example of such an addition is the <html:a href=\"#rico:Proxy\">Proxy\n                                    class</html:a>, that represents (stands for) a Record Resource\n                                as it exists in a specific Record Set.</html:li>\n                            <html:li>finally, a system of classes helps to implement the Relations\n                                section of RiC-CM.<html:br></html:br> While these relations also are\n                                represented as simple, binary object properties (e.g. <html:a href=\"#rico:hasProvenance\">‘hasProvenance’</html:a> that\n                                corresponds to RiC-R026 relation), you may need to assign different\n                                attributes to a relation, e.g. a date, certainty or description, as\n                                it is already possible, and quite often done, in a XML/EAC-CPF file.\n                                One of the standard available methods for representing such a\n                                documented relation in RDF for now is to use a class. RDF* and\n                                SPARQL* specification, which is being developed by the W3C RDF-DEV\n                                Community Group, provides a far simpler method (allowing to consider\n                                a triple as the subject or object of another triple; see <html:a href=\"https://w3c.github.io/rdf-star/\">https://w3c.github.io/rdf-star/</html:a>) and is already being\n                                used by some tools; however it is not yet a W3C standard. Thus, for\n                                example, in RiC-O an <html:a href=\"#rico:AgentOriginationRelation\">AgentOriginationRelation class</html:a> exists. This class may\n                                connect one to many Agents to one to many created or accumulated\n                                Record Resources or Instantiations, and has some specific object\n                                properties (certainty, date, description, source). Back to the\n                                ‘hasProvenance’ object property, let us add that it is formally\n                                defined in RiC-O, using OWL 2 property chain axiom (see <html:a href=\"https://www.w3.org/TR/owl2-new-features/\">https://www.w3.org/TR/owl2-new-features/</html:a>, as a\n                                ‘shortcut’ for the longer path\n                                ‘recordResourceOrInstantiationIsSourceOfAgentOriginationRelation/agentOriginationRelationHasTarget’,\n                                where the intermediate node is an instance of Agent Origination Relation:<html:br></html:br>\n                                <html:code> <owl:propertyChainAxiom\n                                    rdf:parseType=\"Collection\"> <html:br></html:br> <rdf:Description\n                                    rdf:about=\"https://www.ica.org/standards/RiC/ontology#recordResourceOrInstantiationIsSourceOfAgentOriginationRelation\"/>\n                                    <html:br></html:br> <rdf:Description\n                                    rdf:about=\"https://www.ica.org/standards/RiC/ontology#agentOriginationRelationHasTarget\"/>\n                                    <html:br></html:br> </owl:propertyChainAxiom> </html:code>\n                                <html:br></html:br>A triplestore, with the appropriate configuration, may\n                                thus infer the direct ‘hasProvenance’ assertion from this long\n                                path.</html:li>\n                        </html:ul>\n                        <html:p>Most of the <html:strong>datatype properties in RiC-O\n                            </html:strong>correspond to RiC-CM attributes that contain free, plain\n                            text. See for example <html:a href=\"#rico:descriptiveNote\">rico:descriptiveNote</html:a>, <html:a href=\"#rico:history\">rico:history</html:a> and <html:a href=\"#scopeAndContent\">rico:scopeAndContent</html:a>.</html:p>\n                        <html:p>In addition to these datatype properties, the Name and Identifier\n                            RiC-CM attributes also have corresponding classes (subclasses of <html:a href=\"#rico:Appellation\">rico:Appellation</html:a>). A resource may\n                            have several Identifiers and each comes with different attributes (e.g.\n                            archival reference code, system number, digital object identifier), in\n                            this case the identifiers will be modelled in a class. In many simpler\n                            usecases it's sufficent to just use the <html:a href=\"#rico:identifier\">identifier datatype property</html:a>, typically for the archival\n                            reference code.</html:p>\n                        <html:p>The Location RiC-CM attribute also has a <html:a href=\"#rico:PhysicalLocation\">rico:Physical Location corresponding\n                                class</html:a> (for users who want to use Place, Physical Location\n                            and Coordinates for handling places).</html:p>\n                        <html:p>As already said too, every RiC-CM attribute that has ‘controlled\n                            value’ or ‘rule-based’ as a schema value, has a class as corresponding\n                            component in RiC-O. For these CM attributes that correspond to a RiC-O\n                            class, as it is necessary to provide an immediately usable ontology, two\n                            supplementary datatype properties exist that allow not to use the\n                            classes, at least for a while, if you want to implement RiC-O and create\n                            RiC-O/RDF datasets from existing archival metadata without being able to\n                            handle URIs for the information you have.</html:p>\n                        <html:p>For example, you may not be able to handle and maintain URIs for\n                            some controlled values you use in EAD finding aids for carrier types:\n                            maybe your information system does not use a vocabulary for this, and\n                            you cannot for a while consider these carrier types as full entities.\n                            Nevertheless you want to produce RiC-O datasets where every piece of\n                            information is kept, and you want to avoid blank nodes. If RiC-O would\n                            only provide the Carrier Type class, it would be an issue for you. So\n                            RiC-O provides a <html:a href=\"#rico:type\">rico:type datatype\n                                property</html:a>, with range rdfs:literal, which allows you to move\n                            forward.</html:p>\n                        <html:p>Therefore, for the RiC-CM *Type attributes, you have a corresponding\n                                <html:a href=\"#rico:type\">rico:type datatype property</html:a>. For\n                            RiC-CM Coordinates attribute, you also have <html:a href=\"#rico:geographicalCoordinates\">rico:geographicalCoordinates\n                                datatype property</html:a>.</html:p>\n                        <html:p>These datatype properties have a skos:scopeNote which says (for\n                            example) \"Provided for usability reasons. May be made deprecated or\n                            removed later on. Use only if you don't use Physical Location and\n                            Coordinates classes with Place.\"</html:p>\n                        <html:p>The same key design principle (RiC-O must be immediately usable) led\n                            us to define some datatype properties that would enable users to use\n                            RiC-O in simple usecases where they do not want to consider dates and\n                            rules as full entities. Thus, there of course is Date and Rule classes\n                            in RiC-O (since there are Date and Rule entities in RiC-CM). And you\n                            also have 'date' datatype properties; plus a <html:a href=\"#rico:ruleFollowed\">rico:ruleFollowed datatype\n                                property</html:a>. The same analysis led us to keep the <html:a href=\"#rico:history\">rico:history</html:a> datatype property in\n                            RiC-O (same as RiC-CM history attribute), while RiC-CM and RiC-O also\n                            provide the <html:a href=\"#rico:Event\">Event class</html:a>, and using a\n                            series of Events may of course be a better method, easier to query, link\n                            and display, than simply using a history prose discourse. The two\n                            methods may be used in parallel within the same dataset by an\n                            institution that, for example, would decide to emphasize only the\n                            accession, appraisal and description events among the whole history of\n                            Record resources.</html:p>\n                        <html:p>These datatype properties have the same kind of skos:scopeNote as\n                            above.</html:p>\n                        <html:p>Finally, we have introduced a few datatype properties that do not\n                            correspond to any RiC-CM attribute.</html:p>\n                        <html:p>Some are superproperties, and thus group datatype properties\n                                (<html:a href=\"#rico:physicalOrLogicalExtent\">rico:physicalOrLogicalExtent</html:a>, with rico:carrierExtent,\n                            rico:instantiationExtent and rico:recordResourceExtent as subproperties\n                            ; <html:a href=\"#rico:textualValue\">rico:textualValue</html:a>, with\n                            rico:expressedDate and rico:normalizedValue as subproperties; <html:a href=\"#rico:measure\">rico:measure</html:a> (and its subproperties);\n                                <html:a href=\"#rico:referenceSystem\">rico:referenceSystem</html:a>,\n                            superproperty of rico:dateStandard (and of other datatype properties\n                            that do not exist in RiC-CM.)</html:p>\n                        <html:p>Some are simply more specific properties : <html:a href=\"#rico:accrualStatus\">rico:accrualStatus</html:a> ; <html:a href=\"#rico:recordResourceStructure\">rico:recordResourceStructure</html:a> and <html:a href=\"#rico:instantiationStructure\">rico:instantiationStructure</html:a>, subproperties of\n                            rico:structure ; <html:a href=\"#rico:title\">rico:title</html:a>\n                            (subproperty of rico:name) ; rico:altitude, rico:latitude,\n                            rico:longitude (subproperties of rico:measure), rico:geodesicSystem and\n                            rico:altimetricSystem (subproperties of rico:referenceSystem).</html:p>\n                        <html:p>In order to connect all the classes created, <html:strong>a\n                                significant number of object properties have been\n                                defined</html:strong>. While their 'flat' list is a long one, they\n                            are grouped hierarchically, so that one can use the upper to\n                            intermediate level ones for simplicity sake, or choose the most accurate\n                            and expressive ones, or extend the system adding a subproperty easily.\n                            It is expected that, in most use cases, a subset of these properties\n                            only will be needed. As already said above, some of the object\n                            properties are also formally defined as shortcuts.</html:p>\n                        <html:p>Finally, let us mention that we added to RiC-O six individuals,\n                            considering that they would address current and frequent needs:</html:p>\n                        <html:ul>\n                            <html:li>Two (<html:a href=\"#FindingAid\">FindingAid</html:a> and <html:a href=\"#AuthorityRecord\">AuthorityRecord</html:a>) are \n                                instances of both RiC-O Documentary Form Type and SKOS Concept.\n                                They can be used for categorizing Records, finding aids and\n                                authority records being considered as Records. A Record that would\n                                have ‘Finding Aid’ as a Documentary Form Type, can be connected to\n                                one to many Record Resources using 'rico:describes’ object\n                                property.</html:li>\n                            <html:li>Four (<html:a href=\"#Fonds\">Fonds</html:a>, <html:a href=\"#Series\">Series</html:a>, <html:a href=\"#File\">File</html:a>, and <html:a href=\"#Collection\">Collection</html:a>) are both instances of the Record Set Type\n                                class, and of skos:Concept. Their definition is taken from the\n                                ISAD(G) glossary. They can be used for categorizing Record\n                                Sets.</html:li>\n                        </html:ul>\n                        <html:p>In the future, we can imagine that many other categories of the kind\n                            will be defined by the archival community, forming at least rich SKOS\n                            (hopefully multilingual) vocabularies. Considering the concepts thus\n                            defined as being also instances of some RiC-O classes may be of great\n                            interest for producing a richer description (for example, an instance of\n                            the <html:a href=\"#rico:DocumentaryFormType\">Documentary Form Type\n                                class</html:a> may have a history and some temporal relations to\n                            other documentary form types).</html:p>\n                    </html:div>\n                    <html:div id=\"RiCO-documentation\">\n                        <html:h5>RiC-O documentation and annotation properties</html:h5>\n                        <html:p>Each class or property has at least an English label (rdfs:label)\n                            and description (rdfs:comment). Some have a skos:scopeNote or a\n                            skos:example.</html:p>\n                        <html:p>When a RiC-O class or property corresponds in a way to a RiC-CM\n                            component, its description and scope note are, either the same as, or\n                            derived from, their definition and scope note in RiC-CM.</html:p>\n                        <html:p>We have created two annotation properties, subproperties of\n                            rdfs:comment, for handling:</html:p>\n                        <html:ul>\n                            <html:li>Information about the corresponding RiC-CM component when\n                                appliable (<html:a href=\"#rico:RiCCMCorrespondingComponent\">rico:RiCCMCorrespondingComponent</html:a>). Various phrasings\n                                are used in this property depending on the rule applied for defining\n                                the RiC-CM component.</html:li>\n                            <html:li>Information, most often in prose text for now, about possible\n                                mappings with other models or ontologies (<html:a href=\"#rico:closeTo\">rico:closeTo</html:a>, rarely used in this\n                                0.1 version)).</html:li>\n                        </html:ul>\n                        <html:p>Finally, in this official 0.2 release, any change in the definition\n                            of a class or property, since December 2019, is documented using a\n                            skos:changeNote.</html:p>\n                    </html:div>\n                </html:div>\n                <html:div id=\"next-steps\">\n                    <html:h4>Next steps</html:h4>\n                    <html:p>The following is a non exhaustive list of known issues, topics or tasks\n                        on which EGAD has begun to work and will continue to work in the next\n                        months:</html:p>\n                    <html:ul>\n                        <html:li>providing more examples of known implementations of RiC-O in\n                            different institutions and contexts. The goal is to show different\n                            practices on how RiC-O is being implemented. We have begun to release\n                            such examples in the <html:a href=\"https://github.com/ICA-EGAD/RiC-O\">public RiC-O repository on GitHub</html:a>. One can also have a\n                            look at the <html:a href=\"https://ica-egad.github.io/RiC-O/projects-and-tools.html\">Projects and tools page on RiC-O website</html:a>.</html:li>\n                        <html:li>finishing the system of relations (where some subclasses are still\n                            missing)</html:li>\n                        <html:li>assessing, and changing in some cases, the tense of the verbs in\n                            some object properties (e.g. for the properties that correspond to some\n                            RiC-CM relations). This has been done, following RiC-CM v0.2 updates,\n                            where many relations have changed name so that they can be used for\n                            recording both past and present situations.</html:li>\n                        <html:li>articulating the Event and Activity classes, and the Relation\n                            system of classes</html:li>\n                        <html:li>improving the names of object properties. This has been done,\n                            following RiC-CM v0.2 updates and applying a few naming rules, so that,\n                            for example, the same verb is used for naming a relation and the inverse\n                            relation when it exists.</html:li>\n                        <html:li>adding suggestions of mappings (in rico:closeTo) and OWL\n                            equivalences between some classes or properties and components in other\n                            models (among which - this is not an exhaustive list- CIDOC-CRM,\n                            IFLA-LRM, PREMIS, PROV-O, Wikidata and Schema.org)</html:li>\n                        <html:li>documenting RiC-O in French and Spanish</html:li>\n                        <html:li>providing users with some SPARQL constructs for\n                            inferring.</html:li>\n                    </html:ul>\n                </html:div>\n            </html:div>" .
<https://prefix.zazuko.com/rico:> <http://purl.org/dc/terms/title> "International Council on Archives Records in Contexts Ontology\n            (ICA RiC-O) version 0.2" .
<https://prefix.zazuko.com/rico:> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/ns/rdfa#PrefixMapping> .
<https://prefix.zazuko.com/rico:> <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <https://github.com/ICA-EGAD/RiC-O/raw/master/ontology/current-version/RiC-O_v0-2.rdf> .
<https://prefix.zazuko.com/rico:> <http://www.w3.org/ns/rdfa#prefix> "rico" .
<https://prefix.zazuko.com/rico:> <http://www.w3.org/ns/rdfa#uri> <https://www.ica.org/standards/RiC/ontology#> .
