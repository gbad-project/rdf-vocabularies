/* This file was automatically generated. Do not edit by hand. */

const {
  wdrs,
  rdf,
  rdfs,
  ns4,
  owl,
  dcterms,
  xsd,
  ns8,
  ns9,
  ns10,
  vann,
  ns12
} = {
  'wdrs': 'http://www.w3.org/2007/05/powder-s#',
  'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
  'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',
  'ns4': 'http://www.w3.org/TR/powder-dr/#',
  'owl': 'http://www.w3.org/2002/07/owl#',
  'dcterms': 'http://purl.org/dc/terms/',
  'xsd': 'http://www.w3.org/2001/XMLSchema#',
  'ns8': 'http://www.w3.org/TR/powder-formal/#',
  'ns9': 'http://www.w3.org/TR/xpath-functions/#',
  'ns10': 'http://www.w3.org/2007/05/',
  'vann': 'http://purl.org/vocab/vann/',
  'ns12': 'http://purl.org/vocommons/voaf#'
}

export default ({ literal, namedNode, quad }: import('rdf-js').DataFactory): import('rdf-js').Quad[] => {
  return [
    quad(
      namedNode(`${wdrs}Document`),
      namedNode(`${rdf}type`),
      namedNode(`${rdfs}Class`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Document`),
      namedNode(`${rdfs}comment`),
      literal(`A POWDER document.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Document`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}structure`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Document`),
      namedNode(`${rdfs}label`),
      literal(`POWDER document`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Document`),
      namedNode(`${rdfs}subClassOf`),
      namedNode(`${owl}Ontology`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Processor`),
      namedNode(`${rdf}type`),
      namedNode(`${rdfs}Class`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Processor`),
      namedNode(`${rdfs}comment`),
      literal(`A software agent able to process POWDER documents.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Processor`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}powderprocessor`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Processor`),
      namedNode(`${rdfs}label`),
      literal(`POWDER processor`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}Processor`),
      namedNode(`${rdfs}subClassOf`),
      namedNode(`${dcterms}Agent`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}authenticate`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}authenticate`),
      namedNode(`${rdfs}comment`),
      literal(`A pointer to a document that describes how Description Resources created by a FOAF Agent or a DC Terms Agent may be authenticated`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}authenticate`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}discover`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}authenticate`),
      namedNode(`${rdfs}label`),
      literal(`authenticate`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certified`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certified`),
      namedNode(`${rdfs}comment`),
      literal(`A property that takes a Boolean value to declare whether the author of the data certifies the described resource.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certified`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}certification`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certified`),
      namedNode(`${rdfs}label`),
      literal(`certified`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certified`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}boolean`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certifiedby`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certifiedby`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certifiedby`),
      namedNode(`${rdfs}comment`),
      literal(`A property that links a resource to a POWDER document that certifies it.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certifiedby`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}certification`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}certifiedby`),
      namedNode(`${rdfs}label`),
      literal(`certified by`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}data_error`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}data_error`),
      namedNode(`${rdfs}comment`),
      literal(`A property denoting a description of the specific error found in a given POWDER document.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}data_error`),
      namedNode(`${rdfs}domain`),
      namedNode(`${wdrs}Document`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}data_error`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}ppErrorhandling`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}data_error`),
      namedNode(`${rdfs}label`),
      literal(`data error`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}describedby`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}describedby`),
      namedNode(`${rdfs}comment`),
      literal(`An RDF property to exactly match the describedby relationship type introduced in http://www.w3.org/TR/powder-dr/#assoc-linking and formally defined in appendix D of the same document, i.e. the relationship A 'describedby' B asserts that resource B provides a description of resource A. There are no constraints on the format or representation of either A or B, neither are there any further constraints on either resource.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}describedby`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}semlink`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}describedby`),
      namedNode(`${rdfs}label`),
      literal(`described by`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}error_code`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}error_code`),
      namedNode(`${rdfs}comment`),
      literal(`A property denoting the code of any error encountered by the POWDER processor.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}error_code`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}ppErrorhandling`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}error_code`),
      namedNode(`${rdfs}label`),
      literal(`error code`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}error_code`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}nonNegativeInteger`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}DatatypeProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdfs}comment`),
      literal(`This property is meant to be used in OWL2 instead of wdrs:matchesregex. It denotes the string data range corresponding to a set of IRIs.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdfs}domain`),
      namedNode(`${rdfs}Resource`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns8}oxRegexSemantics`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdfs}label`),
      literal(`has IRI`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}hasIRI`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}anyURI`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}issuedby`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}issuedby`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}issuedby`),
      namedNode(`${rdfs}comment`),
      literal(`This property denotes the author of a POWDER document.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}issuedby`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}line3`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}issuedby`),
      namedNode(`${rdfs}label`),
      literal(`issued by`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}logo`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}logo`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}logo`),
      namedNode(`${rdfs}comment`),
      literal(`Points to a graphic summary for the resources in a given class. Typically, it is a logo denoting conformance of a given (set of) resource(s) to a given set of criteria.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}logo`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}line13`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}logo`),
      namedNode(`${rdfs}label`),
      literal(`logo`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}DatatypeProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}comment`),
      literal(`This is the key 'include' property for IRI set definitions in POWDER-S. It is necessary to take account of the POWDER Semantic Extension to process this fully. The value is a regular expression that is matched against an IRI.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}domain`),
      namedNode(`${rdfs}Resource`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns8}regexSemantics`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}label`),
      literal(`matches regular expression`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}string`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}matchesregex`),
      namedNode(`${rdfs}seeAlso`),
      namedNode(`${ns9}regex-syntax`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notknownto`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notknownto`),
      namedNode(`${rdfs}comment`),
      literal(`Property used in results returned from a POWDER Processor that has no data about the candidate resource. The value is the IRI of the processor.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notknownto`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}powderprocessor`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notknownto`),
      namedNode(`${rdfs}label`),
      literal(`not known to`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notknownto`),
      namedNode(`${rdfs}range`),
      namedNode(`${wdrs}Processor`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}DatatypeProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}comment`),
      literal(`This is the key 'exclude' property for IRI set definitions in POWDER-S. It is necessary to take account of the POWDER Semantic Extension to process this fully. The value is a regular expression that is matched against an IRI.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}domain`),
      namedNode(`${rdfs}Resource`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns8}regexSemantics`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}label`),
      literal(`matches regular expression`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}string`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}notmatchesregex`),
      namedNode(`${rdfs}seeAlso`),
      namedNode(`${ns9}regex-syntax`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}proc_error`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}proc_error`),
      namedNode(`${rdfs}comment`),
      literal(`A property denoting a description of the specific software error.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}proc_error`),
      namedNode(`${rdfs}domain`),
      namedNode(`${wdrs}Processor`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}proc_error`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}ppErrorhandling`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}proc_error`),
      namedNode(`${rdfs}label`),
      literal(`processing error`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}sha1sum`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}sha1sum`),
      namedNode(`${rdfs}comment`),
      literal(`Links to a Base64-encoded binary SHA-1 hash of the described resource. May be used by POWDER Processors when assessing trustworthiness of a DR.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}sha1sum`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}certification`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}sha1sum`),
      namedNode(`${rdfs}label`),
      literal(`SHA-1 sum`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}sha1sum`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}base64Binary`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}supportedby`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}supportedby`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}supportedby`),
      namedNode(`${rdfs}comment`),
      literal(`A property that links a POWDER document to some other data source that supports the descriptions provided.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}supportedby`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}supportedBy`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}supportedby`),
      namedNode(`${rdfs}label`),
      literal(`supported by`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}DatatypeProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdfs}comment`),
      literal(`Property linking to a free-text tag which may include spaces.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}tags`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdfs}label`),
      literal(`tag`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}tag`),
      namedNode(`${rdfs}range`),
      namedNode(`${xsd}token`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}text`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}text`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}text`),
      namedNode(`${rdfs}comment`),
      literal(`This property provides a summary of the descriptorset that it annotates, suitable for display to end users.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}text`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}line13`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}text`),
      namedNode(`${rdfs}label`),
      literal(`text that may be displayed`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validfrom`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validfrom`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validfrom`),
      namedNode(`${rdfs}comment`),
      literal(`Provides a timestamp that a POWDER Processor may use when assessing trustworthiness of a POWDER document. Informally, a POWDER Processor should normally ignore data in the document before the given date.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validfrom`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}certification`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validfrom`),
      namedNode(`${rdfs}label`),
      literal(`valid from`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validuntil`),
      namedNode(`${rdf}type`),
      namedNode(`${rdf}Property`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validuntil`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}AnnotationProperty`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validuntil`),
      namedNode(`${rdfs}comment`),
      literal(`Provides a timestamp that a POWDER Processor may use when assessing trustworthiness of a POWDER document. Informally, a POWDER Processor should normally ignore data in the document after the given date.`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validuntil`),
      namedNode(`${rdfs}isDefinedBy`),
      namedNode(`${ns4}certification`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${wdrs}validuntil`),
      namedNode(`${rdfs}label`),
      literal(`valid until`, 'en'),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${dcterms}issued`),
      literal(`2009-09-01`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${dcterms}modified`),
      literal(`2010-11-08`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${dcterms}modified`),
      literal(`2017-06-02`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${vann}preferredNamespacePrefix`),
      literal(`wdrs`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${vann}preferredNamespaceUri`),
      literal(`http://www.w3.org/2007/05/powder-s#`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${rdf}type`),
      namedNode(`${ns12}Vocabulary`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${rdf}type`),
      namedNode(`${owl}Ontology`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${rdfs}comment`),
      literal(`This file specifies the set of classes and properties used in the RDF/OWL version of POWDER documents.`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${rdfs}label`),
      literal(`POWDER-S Vocabulary`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${owl}priorVersion`),
      namedNode(`${ns10}powder-s`),
      namedNode(wdrs)
    ),
    quad(
      namedNode(`${ns10}powder-s`),
      namedNode(`${owl}versionInfo`),
      literal(`2 June 2017`),
      namedNode(wdrs)
    ),

  ]
}
